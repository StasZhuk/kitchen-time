@font-face{font-family:"fontAwesome";src:url(../fonts/fontAwesome/fontawesome-webfont.eot?) format("eot"),url(../fonts/fontAwesome/fontawesome-webfont.woff2) format("woff2"),url(../fonts/fontAwesome/fontawesome-webfont.woff) format("woff"),url(../fonts/fontAwesome/fontawesome-webfont.ttf) format("truetype"),url(../fonts/fontAwesome/fontawesome-webfont.svg#fontAwesome) format("svg")}@font-face{font-family:"robotobold";src:url(../fonts/Roboto/roboto-bold-webfont.eot?) format("eot"),url(../fonts/Roboto/roboto-bold-webfont.woff2) format("woff2"),url(../fonts/Roboto/roboto-bold-webfont.woff) format("woff"),url(../fonts/Roboto/roboto-bold-webfont.ttf) format("truetype"),url(../fonts/Roboto/roboto-bold-webfont.svg#robotobold) format("svg")}@font-face{font-family:"robotobold_italic";src:url(../fonts/Roboto/roboto-bolditalic-webfont.eot?) format("eot"),url(../fonts/Roboto/roboto-bolditalic-webfont.woff2) format("woff2"),url(../fonts/Roboto/roboto-bolditalic-webfont.woff) format("woff"),url(../fonts/Roboto/roboto-bolditalic-webfont.ttf) format("truetype"),url(../fonts/Roboto/roboto-bolditalic-webfont.svg#robotobold_italic) format("svg")}@font-face{font-family:"robotoitalic";src:url(../fonts/Roboto/roboto-italic-webfont.eot?) format("eot"),url(../fonts/Roboto/roboto-italic-webfont.woff2) format("woff2"),url(../fonts/Roboto/roboto-italic-webfont.woff) format("woff"),url(../fonts/Roboto/roboto-italic-webfont.ttf) format("truetype"),url(../fonts/Roboto/roboto-italic-webfont.svg#robotoitalic) format("svg")}@font-face{font-family:"robotolight";src:url(../fonts/Roboto/roboto-light-webfont.eot?) format("eot"),url(../fonts/Roboto/roboto-light-webfont.woff2) format("woff2"),url(../fonts/Roboto/roboto-light-webfont.woff) format("woff"),url(../fonts/Roboto/roboto-light-webfont.ttf) format("truetype"),url(../fonts/Roboto/roboto-light-webfont.svg#robotolight) format("svg")}@font-face{font-family:"robotolight_italic";src:url(../fonts/Roboto/roboto-lightitalic-webfont.eot?) format("eot"),url(../fonts/Roboto/roboto-lightitalic-webfont.woff2) format("woff2"),url(../fonts/Roboto/roboto-lightitalic-webfont.woff) format("woff"),url(../fonts/Roboto/roboto-lightitalic-webfont.ttf) format("truetype"),url(../fonts/Roboto/roboto-lightitalic-webfont.svg#robotolight_italic) format("svg")}@font-face{font-family:"robotomedium";src:url(../fonts/Roboto/roboto-medium-webfont.eot?) format("eot"),url(../fonts/Roboto/roboto-medium-webfont.woff2) format("woff2"),url(../fonts/Roboto/roboto-medium-webfont.woff) format("woff"),url(../fonts/Roboto/roboto-medium-webfont.ttf) format("truetype"),url(../fonts/Roboto/roboto-medium-webfont.svg#robotomedium) format("svg")}@font-face{font-family:"robotomedium";src:url(../fonts/Roboto/roboto-mediumitalic-webfont.eot?) format("eot"),url(../fonts/Roboto/roboto-mediumitalic-webfont.woff2) format("woff2"),url(../fonts/Roboto/roboto-mediumitalic-webfont.woff) format("woff"),url(../fonts/Roboto/roboto-mediumitalic-webfont.ttf) format("truetype"),url(../fonts/Roboto/roboto-mediumitalic-webfont.svg#robotomedium) format("svg")}@font-face{font-family:"robotoregular";src:url(../fonts/Roboto/roboto-regular-webfont.eot?) format("eot"),url(../fonts/Roboto/roboto-regular-webfont.woff2) format("woff2"),url(../fonts/Roboto/roboto-regular-webfont.woff) format("woff"),url(../fonts/Roboto/roboto-regular-webfont.ttf) format("truetype"),url(../fonts/Roboto/roboto-regular-webfont.svg#robotoregular) format("svg")}body,html{height:100%;width:100%}html{line-height:1;font-size:62.5%;-webkit-box-sizing:border-box;box-sizing:border-box;color:#474b57}body{font-size:1.6rem;font-family:"robotoregular",sans-serif;background-color:#fff}*,::after,::before{-webkit-box-sizing:inherit;box-sizing:inherit}h1,h2,h3,h4,h5,h6,ol,p,ul{margin:0;padding:0}ol,ul{list-style:none}a{color:#000;text-decoration:none}button,input,select{outline:0}textarea{resize:none}audio,canvas,iframe,img,svg,video{vertical-align:middle}.container,section{position:relative}.container{width:100%;max-width:1140px;margin:0 auto}.row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-5px;margin-right:-5px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.col{-webkit-box-sizing:border-box;box-sizing:border-box;margin-left:5px;margin-right:5px;word-wrap:break-word}.header{background-color:rgba(19,18,20,.9)}.header a,.header-nav__list a{color:#fff}.header .icon{fill:#fff}.header .row__header-top{padding:30px 0}.header,.header__top{width:100%}.header__logo-wrap{min-width:calc(25% - 10px);width:calc(25% - 10px)}.header__logo{width:250px;height:90px;background:url(../img/icons/main-logo.png) no-repeat center;background-size:contain}.header-nav__wrap{min-width:calc(75% - 10px);width:calc(75% - 10px);display:-webkit-box;display:-ms-flexbox;display:flex}.header-nav,.index-slider img{width:100%}.header-nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header-nav__list li:last-child{margin-bottom:0}.header-nav__list-user{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.header-nav__list-user li{margin-right:30px}.header-nav__list-user li:last-child{margin-right:0}.header-nav__list-user svg{margin-bottom:10px}.header-nav__item--action{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.header-nav__link{display:inline-block;border-bottom:1px solid rgba(255,255,255,.7)}.header-nav__link--dotted{border-bottom:1px dotted rgba(255,255,255,.7)}.header-nav__user-action{position:relative}.header-nav__user-action span{position:absolute;width:25px;height:25px;top:0;left:100%;-webkit-transform:translate(-60%,-40%);-ms-transform:translate(-60%,-40%);transform:translate(-60%,-40%);background-color:#fb3e13;border-radius:50%;font-size:1.3rem;text-align:center;line-height:25px;color:#fff}.nav-item__phone{font-size:2rem}.nav-item__phone .header-nav__link{text-decoration:none}.nav__anchorn .nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header-nav__user-action{text-align:center}.icon--nav{width:15px;height:15px;margin-right:10px}.icon--user-action{width:40px;height:40px}.icon-magnifier{width:30px;height:30px}.header__line{margin:0;height:1px;width:100%;background-color:rgba(255,255,255,.3);border:0;display:block}.square .icon{fill:#000}.nav-main{display:-webkit-box;display:-ms-flexbox;display:flex}.nav-main__list{-webkit-box-flex:1;-ms-flex:1;flex:1;-ms-flex-line-pack:center;align-content:center}.nav-main__search{margin-left:20px}.nav-main__link{display:block;height:100%;padding:10px 0;line-height:30px;font-size:1.5rem;text-transform:uppercase;font-family:"robotobold"}.index-slider{position:relative}.index-slider .slick-arrow{z-index:2;position:absolute;top:0;left:0}@media screen and (max-width:992px){body{font-size:1.5rem}}@media screen and (max-width:768px){body{font-size:1.4rem}}@media screen and (max-width:480px){body{font-size:1.3rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
